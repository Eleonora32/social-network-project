[{"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/index.js":"1","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/App.js":"2","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/store.js":"3","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Navigation.js":"4","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/initialState.js":"5","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/data/albums.js":"6","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/data/photos.js":"7","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/data/posts.js":"8","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/layouts/Pages.js":"9","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/actions/posts.js":"10","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/reducers/RootReducer.js":"11","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Persons/AddNewPerson.js":"12","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/typesList.js":"13","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/reducers/PersonReducer.js":"14","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/data/persons.js":"15","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Persons/SelectActivePerson.js":"16","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Persons/Persons.js":"17","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/reducers/PostsReducer.js":"18","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Persons/PersonProfile.js":"19","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Home/Home.js":"20","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Albums/Album.js":"21","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Albums/Albums.js":"22","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/actions/persons.js":"23","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Albums/AddAlbum.js":"24","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Persons/PersonCard.js":"25","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Albums/PersonalAlbums.js":"26","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Persons/EditPersonForm.js":"27","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Albums/AlbumCard.js":"28","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/FormComponents/InputField.js":"29","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Posts/AddPost.js":"30","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Posts/PersonalBlog.js":"31","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Photos/PhotoCard.js":"32","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Photos/AddPhoto.js":"33","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/reducers/AlbumsReducer.js":"34","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/actions/albums.js":"35"},{"size":505,"mtime":1623346961647,"results":"36","hashOfConfig":"37"},{"size":2480,"mtime":1623656854818,"results":"38","hashOfConfig":"37"},{"size":608,"mtime":1623346961650,"results":"39","hashOfConfig":"37"},{"size":1054,"mtime":1623346961643,"results":"40","hashOfConfig":"37"},{"size":323,"mtime":1623577432067,"results":"41","hashOfConfig":"37"},{"size":195,"mtime":1623346961646,"results":"42","hashOfConfig":"37"},{"size":195,"mtime":1623346961647,"results":"43","hashOfConfig":"37"},{"size":187,"mtime":1623346961647,"results":"44","hashOfConfig":"37"},{"size":1045,"mtime":1623346961648,"results":"45","hashOfConfig":"37"},{"size":1196,"mtime":1623346961648,"results":"46","hashOfConfig":"37"},{"size":328,"mtime":1623348022319,"results":"47","hashOfConfig":"37"},{"size":2978,"mtime":1623346961643,"results":"48","hashOfConfig":"37"},{"size":644,"mtime":1623577480059,"results":"49","hashOfConfig":"37"},{"size":1444,"mtime":1623346961649,"results":"50","hashOfConfig":"37"},{"size":362,"mtime":1623346961646,"results":"51","hashOfConfig":"37"},{"size":1126,"mtime":1623604484434,"results":"52","hashOfConfig":"37"},{"size":664,"mtime":1623346961644,"results":"53","hashOfConfig":"37"},{"size":505,"mtime":1623656852363,"results":"54","hashOfConfig":"37"},{"size":4360,"mtime":1623346961644,"results":"55","hashOfConfig":"37"},{"size":107,"mtime":1623346961643,"results":"56","hashOfConfig":"37"},{"size":1724,"mtime":1623670606516,"results":"57","hashOfConfig":"37"},{"size":931,"mtime":1623669236355,"results":"58","hashOfConfig":"37"},{"size":3236,"mtime":1623346961648,"results":"59","hashOfConfig":"37"},{"size":1349,"mtime":1623670359064,"results":"60","hashOfConfig":"37"},{"size":1447,"mtime":1623605880905,"results":"61","hashOfConfig":"37"},{"size":1308,"mtime":1623669368934,"results":"62","hashOfConfig":"37"},{"size":2455,"mtime":1623346961644,"results":"63","hashOfConfig":"37"},{"size":1377,"mtime":1623578554556,"results":"64","hashOfConfig":"37"},{"size":320,"mtime":1623346961643,"results":"65","hashOfConfig":"37"},{"size":2092,"mtime":1623577265585,"results":"66","hashOfConfig":"37"},{"size":830,"mtime":1623346961646,"results":"67","hashOfConfig":"37"},{"size":812,"mtime":1623346961645,"results":"68","hashOfConfig":"37"},{"size":1179,"mtime":1623346961645,"results":"69","hashOfConfig":"37"},{"size":789,"mtime":1623656847359,"results":"70","hashOfConfig":"37"},{"size":1466,"mtime":1623668551847,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1hp9ok0",{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/index.js",[],["154","155"],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/App.js",["156","157","158","159","160"],"import React, {useState, useEffect} from 'react'\n\nimport {connect} from \"react-redux\"\n\nimport albumsInitial, {setAlbumsToStorage} from '../data/albums'\nimport photosInitial, {setPhotosToStorage} from '../data/photos'\nimport postsInitial, {setPostsToStorage} from \"../data/posts\"\n\n\nimport Navigation from \"./Navigation\";\nimport Pages from \"../layouts/Pages\";\nimport {getPosts} from \"../store/actions/posts\";\nimport {getAlbums} from \"../store/actions/albums\";\n\nexport const GlobalContext = React.createContext(null)\n\nconst App = ({initPosts, initAlbums}) => {\n\n    useEffect(()=>{\n        initPosts()\n        initAlbums()\n    }, [])\n\n    // const [albums, setAlbums] = useState(albumsInitial)\n\n    // const addNewAlbum = formData => {\n    //     const newAlbums = [...albums, {...formData, id: Date.now()}]\n    //     setAlbums(newAlbums)\n    //     setAlbumsToStorage(newAlbums)\n\n    // }\n\n    // const getAlbumById = id => {\n    //     const idx = albums.findIndex(album => album.id === id)\n    //     if (idx === -1) {\n    //         return null\n    //     }\n    //     return albums[idx]\n    // }\n\n    const [photos, setPhotos] = useState(photosInitial)\n\n    const addNewPhoto = formData => {\n        const newPhotos = [...photos, {...formData, id: Date.now(), like: 0, dislike: 0}]\n        setPhotos(newPhotos)\n        setPhotosToStorage(newPhotos)\n    }\n\n    const photoAction = (id, action) => {\n        const newPhotos = [...photos]\n        let idx = newPhotos.findIndex( p=>p.id === id)\n        if (idx ===-1) return null\n        newPhotos[idx][action]++\n        setPhotos(newPhotos)\n        setPhotosToStorage(newPhotos)\n    }\n\n    // const [posts, setPosts] = useState(postsInitial);\n    //\n    // const addNewPost = (formData) => {\n    //     const newPosts = [...posts, {...formData, id: Date.now(), datetime: Date.now()}]\n    //     setPosts(newPosts)\n    //     setPostsToStorage(newPosts)\n    // };\n\n\n    return (\n        <GlobalContext.Provider value={{\n            // albums,\n            // addNewAlbum,\n            // getAlbumById,\n            photos,\n            addNewPhoto,\n            photoAction,\n            // posts,\n            // addNewPost\n        }}>\n            <Navigation/>\n            <Pages/>\n        </GlobalContext.Provider>\n    )\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        initPosts: () => dispatch(getPosts()),\n        initAlbums: () => dispatch(getAlbums())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(App)","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/store.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Navigation.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/initialState.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/data/albums.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/data/photos.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/data/posts.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/layouts/Pages.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/actions/posts.js",["161","162"],"import postsInitial, {setPostsToStorage} from '../../data/posts'\nimport {ADD_POST, FETCH_POSTS} from \"../typesList\";\nimport personsInitial, {setPersonsToStorage} from \"../../data/persons\";\n\n\nexport const getPosts = () =>{\n    return async dispatch => {\n        try {\n            const obj = getObj()\n            await dispatch(fetchPosts(obj))\n        } catch (e) {\n            console.log(e.message)\n        }\n    }\n}\n\nexport const addPost = post => {\n    return async dispatch => {\n        try {\n            console.log( post )\n            const newPost = await addPostInServer(post)\n            await dispatch(addPostInState(newPost))\n        } catch (e) {\n            console.log(e.message)\n        }\n    }\n}\n\nconst fetchPosts = data => {\n    return {\n        type: FETCH_POSTS,\n        payload: data\n    }\n}\n\nconst addPostInState = post => {\n    return {\n        type: ADD_POST,\n        payload: post\n    }\n}\n\n//Server Side\n\nconst getObj = () => {\n    return {\n        list: [...postsInitial]\n    }\n}\n\nconst addPostInServer = post => {\n    const newPost = {\n        ...post,\n        id: Date.now()\n    }\n    postsInitial.push(newPost)\n    setPostsToStorage(postsInitial)\n    return newPost\n}","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/reducers/RootReducer.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Persons/AddNewPerson.js",["163"],"import React, {useState} from 'react'\nimport {connect} from 'react-redux'\nimport {useHistory} from 'react-router-dom'\nimport {addNewPerson} from \"../../store/actions/persons\";\n\nimport {useForm} from \"react-cool-form\"\nimport InputField from \"../FormComponents/InputField\";\n\nconst AddNewPerson = ({addPerson}) => {\n\n    let history = useHistory()\n\n    const { form, use } = useForm({\n        defaultValues: {fName: '', lName: '', age: '', email: '', phone: '', avatar: '' },\n        onSubmit: (values) => submitHandle(values),\n    });\n\n    const submitHandle = values => {\n        console.log( values )\n        addPerson(values)\n        history.push('/persons')\n    }\n\n    const errors = use(\"errors\", { errorWithTouched: true })\n\n    return (\n        <div className=\"container\">\n            <div className=\"w-50 mx-auto\">\n                <form ref={form} noValidate>\n                    <InputField\n                        type=\"text\"\n                        name=\"fName\"\n                        id=\"fName\"\n                        label=\"First Name\"\n                        required\n                        error={errors.fName}\n                    />\n                    <InputField\n                        type=\"text\"\n                        name=\"lName\"\n                        id=\"lName\"\n                        label=\"Last Name\"\n                        required\n                        error={errors.lName}\n                    />\n                    <InputField\n                        type=\"text\"\n                        name=\"age\"\n                        id=\"age\"\n                        label=\"Age\"\n                        required\n                        error={errors.age}\n                    />\n                    <InputField\n                        type=\"email\"\n                        name=\"email\"\n                        id=\"email\"\n                        label=\"Email\"\n                        required\n                        error={errors.email}\n                    />\n                    <InputField\n                        type=\"text\"\n                        name=\"phone\"\n                        id=\"phone\"\n                        label=\"Phone\"\n                        required\n                        error={errors.phone}\n                    />\n                    <InputField\n                        type=\"text\"\n                        name=\"avatar\"\n                        id=\"avatar\"\n                        label=\"Avatar\"\n                        required\n                        error={errors.avatar}\n                    />\n                    <div className=\"form-group mt-3\">\n                        <button type=\"submit\" className=\"btn btn-primary w-100\">Add</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPerson: (person) => dispatch( addNewPerson(person) )\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(AddNewPerson)","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/typesList.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/reducers/PersonReducer.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/data/persons.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Persons/SelectActivePerson.js",["164"],"import React, {useEffect} from \"react\"\nimport {connect} from \"react-redux\"\nimport {changeActivePersonId, getPersons} from \"../../store/actions/persons\";\n\nconst SelectActivePerson = ({persons, activePerson, getPersonsObject, changeActivePerson}) => {\n\n    useEffect(() => {\n    \n        getPersonsObject()\n    }, []);\n\n\n    const changeSelectValue = event => {\n        changeActivePerson(+event.target.value)\n    }\n\n    return persons.length ? (\n        <select onChange={changeSelectValue} defaultValue={activePerson || null}>\n            <option value='-1'>Choose a user</option>\n            {persons.map(p => (<option key={p.id} value={p.id}>{p.fName} {p.lName}</option>))}\n        </select>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        persons: state.persons.list,\n        activePerson: state.persons.activePerson\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getPersonsObject: () => dispatch(getPersons()),\n        changeActivePerson: newId => dispatch(changeActivePersonId(newId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectActivePerson)","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Persons/Persons.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/reducers/PostsReducer.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Persons/PersonProfile.js",["165","166"],"import React, {Fragment, useContext, useEffect, useState} from \"react\"\nimport {useParams} from 'react-router-dom'\nimport {connect} from \"react-redux\"\nimport {GlobalContext} from \"../App\"\nimport AddAlbum from \"../Albums/AddAlbum\"\nimport PersonalAlbums from \"../Albums/PersonalAlbums\"\nimport AddPost from \"../Posts/AddPost\"\nimport PersonalBlog from \"../Posts/PersonalBlog\"\nimport {editPerson, setPersonById} from \"../../store/actions/persons\";\nimport EditPersonForm from \"./EditPersonForm\";\nimport {CHANGE_ADD_POST, CHANGE_EDIT_MODE} from \"../../store/typesList\";\n\n\nconst PersonProfile = ({activePerson, editMode, setEditMode, setLocalPerson, person, addPostMode, setAddPostMode}) => {\n\n    const {id} = useParams()\n    const {addNewAlbum} = useContext(GlobalContext)\n    const [addAlbum, setAddAlbum] = useState(false)\n\n\n    useEffect(() => {\n        setLocalPerson(+id)\n    }, []);\n\n    useEffect(() => {\n        setLocalPerson(+id)\n    }, [editMode]);\n\n\n    const renderProfile = () => {\n        if (!person) return false\n        return (\n            <div className=\"container\">\n                <div className=\"card w-100\">\n                    {editMode ? renderForm() : renderInfo()}\n                </div>\n                {renderEditButton()}\n            </div>\n        )\n    }\n\n\n\n    const renderForm = () => {\n        return (\n            <EditPersonForm person={person} />\n        )\n    }\n\n    const renderInfo = () => {\n        return (\n            <Fragment>\n                <img src={person.avatar} className=\"card-img-top\" alt=\"{person.fName} {person.lName}\"/>\n                <div className=\"card-body\">\n                    <h3 className=\"card-title\">\n                        {person.fName} {person.lName}\n                    </h3>\n                    <div className=\"card-text\">\n                        <p>{person.age}</p>\n                        <p>{person.phone}</p>\n                        <p>{person.email}</p>\n                    </div>\n                </div>\n            </Fragment>\n        )\n    }\n\n\n\n    const renderEditButton = () => {\n        if (activePerson !== person.id || editMode || addAlbum || addPostMode) return null\n        return (\n            <div className=\"w-100\">\n                <button onClick={editButtonHandle} className=\"w-100 btn btn-success my-2\">Edit</button>\n                <button onClick={addAlbumButtonHandle} className=\"w-100 btn btn-info mb-2\">Add Album</button>\n                <button onClick={addPostButtonHandle} className=\"w-100 btn btn-info mb-2\">Add Post</button>\n            </div>\n        )\n    }\n\n    const editButtonHandle = event => {\n        event.preventDefault()\n        setEditMode()\n    }\n\n    const addAlbumButtonHandle = event => {\n        event.preventDefault()\n        setAddAlbum(true)\n    }\n\n    const addPostButtonHandle = event => {\n        event.preventDefault()\n        setAddPostMode()\n    }\n\n    const addNewAlbumHandle = formData => {\n        addNewAlbum(formData)\n        setAddAlbum(false)\n    }\n\n    const renderPersonInfo = () => {\n\n        if (addAlbum) {\n            return (<AddAlbum onFinish={addNewAlbumHandle}/>)\n        }\n        if (addPostMode) {\n            return <AddPost />;\n        }\n        if (editMode) {\n            return null\n        }\n\n        return (<div>\n            <PersonalAlbums personId={+id}/>\n            <PersonalBlog personId={+id}/>\n        </div>)\n\n    }\n\n    return (\n        <section className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-6 col-sm-4\">\n                    {renderProfile()}\n                </div>\n                <div className=\"col-6 col-sm-8\">\n                    {renderPersonInfo()}\n                </div>\n            </div>\n\n        </section>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        activePerson: +state.persons.activePerson,\n        person: state.persons.personById,\n        editMode: state.persons.editMode,\n        addPostMode: state.posts.addPostMode\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        editLocalPerson: person => dispatch(editPerson(person)),\n        setLocalPerson: id => dispatch(setPersonById(id)),\n        setEditMode: () => dispatch({type: CHANGE_EDIT_MODE}),\n        setAddPostMode: () => dispatch({type: CHANGE_ADD_POST})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonProfile)","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Home/Home.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Albums/Album.js",["167","168"],"import React, {useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport {useParams} from 'react-router-dom';\nimport {setPersonById} from \"../../store/actions/persons\";\nimport {setAlbumById } from \"../../store/actions/albums\";\n// import PhotoCard from \"../Photos/PhotoCard\";\n\nconst Album = (album, person, getPersonById, getAlbumById) => {\n    // const {photos, getPersonById, getAlbumById} = useContext(GlobalContext)\n    const {id} = useParams()\n    // const [album, setAlbum] = useState(getAlbumById(+id))\n    // const [person, setPerson] = useState(null)\n    // const [albumPhotos, setAlbumPhotos] = useState(photos.filter(p => p.albumId === +id))\n\n    useEffect(() => {\n        getAlbumById(+id)\n    }, []);\n\n    useEffect(() => {\n      if(!album) {\n          return\n      }\n      getPersonById(album.personId)\n    },[album])\n    \n\n\n\n    const renderAlbum = () => {\n        if (!album || !person) {\n            return (<div>Loading ...</div>)\n        }\n        return (\n            <div className=\"container\">\n                <h1>{album.title}</h1>\n                <h2>by {person.lName} {person.fName}</h2>\n                <div className=\"row\">\n                    {/* {albumPhotos.map(photo => <PhotoCard key={photo.id} photo={photo}/>)} */}\n                </div>\n            </div>\n        )\n    }\n\n    return renderAlbum()\n}\n\nconst mapStateToProps = state => {\n    return {\n    album: state.albums.albumById,\n    person: state.persons.personById\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getPersonById: (id) => dispatch(setPersonById(id)),\n        getAlbumById: (id) => dispatch(setAlbumById(id))\n       \n}}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Album)","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Albums/Albums.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/actions/persons.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Albums/AddAlbum.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Persons/PersonCard.js",["169","170"],"import React from \"react\"\nimport {connect} from \"react-redux\"\nimport {useHistory} from 'react-router-dom'\nimport {deletePerson} from '../../store/actions/persons'\n\nconst PersonCard = ({person, deleteElement, activePersonId}) => {\n    let history = useHistory()\n    const clickHandle = event => {\n        event.preventDefault()\n        history.push(`/persons/${person.id}`)\n    }\n\n    const deleteHandle = event => {\n        event.preventDefault()\n        deleteElement(person.id)\n    }\n\n    return (\n        <div className=\"col-6 col-sm-4 col-md-3\">\n            <div className=\"card\">\n                <img src={person.avatar} className=\"card-img-top\" alt=\"{person.fName} {person.lName}\" />\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{person.fName} {person.lName}</h5>\n                        <a href=\"#\" onClick={clickHandle} className=\"btn btn-primary\">Open profile</a>\n                        {activePersonId === person.id ? <a href=\"#\" onClick={deleteHandle} className=\"btn btn-danger\">Delete me</a> : null}\n                    </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        deleteElement: personId => dispatch(deletePerson(personId))\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        activePersonId: state.persons.activePerson\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonCard)","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Albums/PersonalAlbums.js",["171","172"],"import React, {useContext} from \"react\"\nimport {GlobalContext} from \"../App\"\nimport PhotoCard from \"../Photos/PhotoCard\";\nimport AddPhoto from \"../Photos/AddPhoto\";\nimport {connect} from \"react-redux\";\n\n\nconst PersonalAlbums = ({personId, activePerson, albums}) => {\n    const { photos, addNewPhoto} = useContext(GlobalContext)\n    const renderAlbum = () => {\n        const personalList = albums.filter(a => a.personId === personId)\n        return personalList.map(a => (\n            <div key={a.id}>\n                <h3>{a.title}</h3>\n                <div className=\"row\">\n                    {renderPhotosByAlbum(a.id)}\n                </div>\n                <div>\n                    {/* { activePerson === personId ? <AddPhoto albumId={a.id} addNewPhoto={addNewPhoto} /> : null } */}\n                </div>\n            </div>\n        ))\n    }\n\n    const renderPhotosByAlbum = albumId => {\n        const albumPhotos = photos.filter(photo => photo.albumId === albumId)\n        return albumPhotos.map(photo => (<PhotoCard key={photo.id} photo={photo} />))\n    }\n\n    return (\n        renderAlbum()\n    )\n}\nconst mapStateToProps = state => {\n    return {\n        activePerson: state.persons.activePerson,\n        albums: state.albums.list\n    }\n}\nexport default connect(mapStateToProps, null)(PersonalAlbums)","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Persons/EditPersonForm.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Albums/AlbumCard.js",["173"],"import React, { useEffect} from 'react'\nimport {useHistory} from 'react-router-dom'\n// import {GlobalContext} from \"../App\"\nimport {connect} from \"react-redux\";\nimport {setPersonById} from \"../../store/actions/persons\";\n\n// import Albums from './Albums';\n\nconst AlbumCard = ({album, getPersonById, persons}) => {\n    \n  \n    useEffect(() => {\n        getPersonById(album.personId)\n    }, []);\n   \n\n    let history = useHistory()\n\n    const clickHandler = event => {\n        event.preventDefault()\n        history.push(`/albums/${album.id}`)\n    }\n\n    return (\n        <div className=\"col-6 col-sm-4 col-md-3\">\n            <div className=\"card cur-pointer\" onClick={clickHandler}>\n                {/* <img src={photo.src} alt={album.title}/> */}\n                <div className=\"card-body\">\n                    <h3 className=\"card-title\">{album.title}</h3>\n                    <p className=\"card-text\">{persons.lName} {persons.fName}[0].</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n    persons: state.persons.personById\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getPersonById: (id) => dispatch(setPersonById(id)),\n        // addLocalPost: post => dispatch(addPost(post))\n};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlbumCard)\n// export default AlbumCard","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/FormComponents/InputField.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Posts/AddPost.js",["174"],"import React, { useState, useContext } from \"react\";\n// import { GlobalContext } from \"../App\";\nimport {connect} from \"react-redux\";\nimport {CHANGE_ADD_POST} from \"../../store/typesList\";\nimport {addPost} from \"../../store/actions/posts\";\n\nconst AddPost = ({  activePerson, addLocalPost, setAddPostMode  }) => {\n    const [formData, setFormData] = useState({\n        personId: activePerson,\n        title: \"\",\n        short: \"\",\n        body: \"\",\n    });\n\n    const changeFieldHandle = (event) => {\n        setFormData({\n            ...formData,\n            [event.target.name]: event.target.value,\n        });\n    };\n\n    return (\n        <form\n            onSubmit={event => {\n                event.preventDefault()\n                addLocalPost(formData)\n                setAddPostMode()\n            }}\n        >\n            <div className=\"form-group\">\n                <label>Title</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"title\"\n                    onChange={changeFieldHandle}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label>Short Text</label>\n                <textarea\n                    className=\"form-control\"\n                    name=\"short\"\n                    onChange={changeFieldHandle}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label>Post text</label>\n                <textarea\n                    className=\"form-control\"\n                    name=\"body\"\n                    onChange={changeFieldHandle}\n                />\n            </div>\n            <button type=\"submit\">Add Post</button>\n        </form>\n    );\n};\nconst mapStateToProps = state => {\n    return {\n        activePerson: state.persons.activePerson\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setAddPostMode: () => dispatch({type: CHANGE_ADD_POST}),\n        addLocalPost: post => dispatch(addPost(post))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost)","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Posts/PersonalBlog.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Photos/PhotoCard.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Photos/AddPhoto.js",[],"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/reducers/AlbumsReducer.js",["175"],"import {ADD_ALBUM, CHANGE_ADD_ALBUM, FETCH_ALBUM, SET_ALBUM_BY_ID} from \"../typesList\";\n\n\nlet idx\nlet _arr\n\nexport const AlbumsReducer = (state={}, action) => {\n    switch (action.type) {\n        case FETCH_ALBUM:\n            return {...state, ...action.payload}\n\n        case ADD_ALBUM:\n            return {\n                ...state, list: [...state.list, action.payload]\n            }\n            \n        case CHANGE_ADD_ALBUM:\n            return {...state,  addAlbumMode: !state.addAlbumMode}\n\n        case SET_ALBUM_BY_ID:\n             idx = state.list.findIndex(a=>a.id === action.payload)\n                if (idx===-1) return {...state,  albumById: {}}\n                return {...state,  albumById: state.list[idx]}\n                \n        default:\n            return state\n    }\n}","/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/actions/albums.js",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":5,"column":8,"nodeType":"182","messageId":"183","endLine":5,"endColumn":21},{"ruleId":"180","severity":1,"message":"184","line":5,"column":24,"nodeType":"182","messageId":"183","endLine":5,"endColumn":42},{"ruleId":"180","severity":1,"message":"185","line":7,"column":8,"nodeType":"182","messageId":"183","endLine":7,"endColumn":20},{"ruleId":"180","severity":1,"message":"186","line":7,"column":23,"nodeType":"182","messageId":"183","endLine":7,"endColumn":40},{"ruleId":"187","severity":1,"message":"188","line":22,"column":8,"nodeType":"189","endLine":22,"endColumn":10,"suggestions":"190"},{"ruleId":"180","severity":1,"message":"191","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":22},{"ruleId":"180","severity":1,"message":"192","line":3,"column":25,"nodeType":"182","messageId":"183","endLine":3,"endColumn":44},{"ruleId":"180","severity":1,"message":"193","line":1,"column":16,"nodeType":"182","messageId":"183","endLine":1,"endColumn":24},{"ruleId":"187","severity":1,"message":"194","line":10,"column":8,"nodeType":"189","endLine":10,"endColumn":10,"suggestions":"195"},{"ruleId":"187","severity":1,"message":"196","line":23,"column":8,"nodeType":"189","endLine":23,"endColumn":10,"suggestions":"197"},{"ruleId":"187","severity":1,"message":"196","line":27,"column":8,"nodeType":"189","endLine":27,"endColumn":18,"suggestions":"198"},{"ruleId":"187","severity":1,"message":"199","line":17,"column":8,"nodeType":"189","endLine":17,"endColumn":10,"suggestions":"200"},{"ruleId":"187","severity":1,"message":"201","line":24,"column":7,"nodeType":"189","endLine":24,"endColumn":14,"suggestions":"202"},{"ruleId":"203","severity":1,"message":"204","line":24,"column":25,"nodeType":"205","endLine":24,"endColumn":87},{"ruleId":"203","severity":1,"message":"204","line":25,"column":57,"nodeType":"205","endLine":25,"endColumn":119},{"ruleId":"180","severity":1,"message":"206","line":4,"column":8,"nodeType":"182","messageId":"183","endLine":4,"endColumn":16},{"ruleId":"180","severity":1,"message":"207","line":9,"column":21,"nodeType":"182","messageId":"183","endLine":9,"endColumn":32},{"ruleId":"187","severity":1,"message":"208","line":14,"column":8,"nodeType":"189","endLine":14,"endColumn":10,"suggestions":"209"},{"ruleId":"180","severity":1,"message":"210","line":1,"column":27,"nodeType":"182","messageId":"183","endLine":1,"endColumn":37},{"ruleId":"180","severity":1,"message":"211","line":5,"column":5,"nodeType":"182","messageId":"183","endLine":5,"endColumn":9},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'albumsInitial' is defined but never used.","Identifier","unusedVar","'setAlbumsToStorage' is defined but never used.","'postsInitial' is defined but never used.","'setPostsToStorage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'initAlbums' and 'initPosts'. Either include them or remove the dependency array. If 'initPosts' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["214"],"'personsInitial' is defined but never used.","'setPersonsToStorage' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getPersonsObject'. Either include it or remove the dependency array. If 'getPersonsObject' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["215"],"React Hook useEffect has missing dependencies: 'id' and 'setLocalPerson'. Either include them or remove the dependency array. If 'setLocalPerson' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["216"],["217"],"React Hook useEffect has missing dependencies: 'getAlbumById' and 'id'. Either include them or remove the dependency array. If 'getAlbumById' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["218"],"React Hook useEffect has a missing dependency: 'getPersonById'. Either include it or remove the dependency array. If 'getPersonById' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["219"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'AddPhoto' is defined but never used.","'addNewPhoto' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'album.personId' and 'getPersonById'. Either include them or remove the dependency array. If 'getPersonById' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["220"],"'useContext' is defined but never used.","'_arr' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [initAlbums, initPosts]",{"range":"235","text":"236"},"Update the dependencies array to be: [getPersonsObject]",{"range":"237","text":"238"},"Update the dependencies array to be: [id, setLocalPerson]",{"range":"239","text":"240"},"Update the dependencies array to be: [editMode, id, setLocalPerson]",{"range":"241","text":"242"},"Update the dependencies array to be: [getAlbumById, id]",{"range":"243","text":"244"},"Update the dependencies array to be: [album, getPersonById]",{"range":"245","text":"246"},"Update the dependencies array to be: [album.personId, getPersonById]",{"range":"247","text":"248"},[627,629],"[initAlbums, initPosts]",[312,314],"[getPersonsObject]",[877,879],"[id, setLocalPerson]",[940,950],"[editMode, id, setLocalPerson]",[719,721],"[getAlbumById, id]",[833,840],"[album, getPersonById]",[388,390],"[album.personId, getPersonById]"]