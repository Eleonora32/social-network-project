{"ast":null,"code":"import albumsInitial, { setAlbumsToStorage } from '../../data/albums';\nimport { ADD_ALBUM, FETCH_ALBUM, SET_ALBUM_BY_ID } from \"../typesList\";\nexport const getAlbums = () => {\n  return async dispatch => {\n    try {\n      const obj = getObj();\n      await dispatch(fetchAlbums(obj));\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n};\nexport const addAlbum = album => {\n  return async dispatch => {\n    try {\n      const newAlbum = await addAlbumInServer(album);\n      await dispatch(addAlbumInState(newAlbum));\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n};\n\nconst fetchAlbums = data => {\n  return {\n    type: FETCH_ALBUM,\n    payload: data\n  };\n};\n\nconst addAlbumInState = album => {\n  return {\n    type: ADD_ALBUM,\n    payload: album\n  };\n};\n\nexport const setAlbumById = albumId => {\n  return dispatch => {\n    try {\n      dispatch(setAlbumByIdInState(albumId));\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n};\n\nconst setAlbumByIdInState = albumId => {\n  return {\n    type: SET_ALBUM_BY_ID,\n    payload: albumId\n  };\n}; //Server Side\n\n\nconst getObj = () => {\n  return {\n    list: [...albumsInitial]\n  };\n};\n\nconst addAlbumInServer = album => {\n  const newAlbum = { ...album,\n    id: Date.now()\n  };\n  albumsInitial.push(newAlbum);\n  setAlbumsToStorage(albumsInitial);\n  return newAlbum;\n};","map":{"version":3,"sources":["/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/actions/albums.js"],"names":["albumsInitial","setAlbumsToStorage","ADD_ALBUM","FETCH_ALBUM","SET_ALBUM_BY_ID","getAlbums","dispatch","obj","getObj","fetchAlbums","e","console","log","message","addAlbum","album","newAlbum","addAlbumInServer","addAlbumInState","data","type","payload","setAlbumById","albumId","setAlbumByIdInState","list","id","Date","now","push"],"mappings":"AAAA,OAAOA,aAAP,IAAuBC,kBAAvB,QAAgD,mBAAhD;AACA,SAAQC,SAAR,EAAmBC,WAAnB,EAAgCC,eAAhC,QAAsD,cAAtD;AAIA,OAAO,MAAMC,SAAS,GAAG,MAAK;AAC1B,SAAO,MAAMC,QAAN,IAAkB;AACrB,QAAI;AACA,YAAMC,GAAG,GAAGC,MAAM,EAAlB;AACA,YAAMF,QAAQ,CAACG,WAAW,CAACF,GAAD,CAAZ,CAAd;AACH,KAHD,CAGE,OAAOG,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACH;AACJ,GAPD;AAQH,CATM;AAWP,OAAO,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAC7B,SAAO,MAAMT,QAAN,IAAkB;AACrB,QAAI;AACA,YAAMU,QAAQ,GAAG,MAAMC,gBAAgB,CAACF,KAAD,CAAvC;AACA,YAAMT,QAAQ,CAACY,eAAe,CAACF,QAAD,CAAhB,CAAd;AACH,KAHD,CAGE,OAAON,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACH;AACJ,GAPD;AAQH,CATM;;AAWP,MAAMJ,WAAW,GAAGU,IAAI,IAAI;AACxB,SAAO;AACHC,IAAAA,IAAI,EAAEjB,WADH;AAEHkB,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALD;;AAOA,MAAMD,eAAe,GAAGH,KAAK,IAAI;AAC7B,SAAO;AACHK,IAAAA,IAAI,EAAElB,SADH;AAEHmB,IAAAA,OAAO,EAAEN;AAFN,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMO,YAAY,GAAGC,OAAO,IAAI;AACnC,SAAOjB,QAAQ,IAAI;AACf,QAAI;AACAA,MAAAA,QAAQ,CAAEkB,mBAAmB,CAACD,OAAD,CAArB,CAAR;AACH,KAFD,CAEE,OAAOb,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACH;AACJ,GAND;AAOH,CARM;;AAUP,MAAMW,mBAAmB,GAAGD,OAAO,IAAI;AACnC,SAAO;AACHH,IAAAA,IAAI,EAAEhB,eADH;AAEHiB,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALD,C,CAOA;;;AAEA,MAAMf,MAAM,GAAG,MAAM;AACjB,SAAO;AACHiB,IAAAA,IAAI,EAAE,CAAC,GAAGzB,aAAJ;AADH,GAAP;AAGH,CAJD;;AAMA,MAAMiB,gBAAgB,GAAGF,KAAK,IAAI;AAC9B,QAAMC,QAAQ,GAAG,EACb,GAAGD,KADU;AAEbW,IAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAFS,GAAjB;AAIA5B,EAAAA,aAAa,CAAC6B,IAAd,CAAmBb,QAAnB;AACAf,EAAAA,kBAAkB,CAACD,aAAD,CAAlB;AACA,SAAOgB,QAAP;AACH,CARD","sourcesContent":["import albumsInitial, {setAlbumsToStorage} from '../../data/albums'\nimport {ADD_ALBUM, FETCH_ALBUM, SET_ALBUM_BY_ID} from \"../typesList\";\n\n\n\nexport const getAlbums = () =>{\n    return async dispatch => {\n        try {\n            const obj = getObj()\n            await dispatch(fetchAlbums(obj))\n        } catch (e) {\n            console.log(e.message)\n        }\n    }\n}\n\nexport const addAlbum = album => {\n    return async dispatch => {\n        try {\n            const newAlbum = await addAlbumInServer(album)\n            await dispatch(addAlbumInState(newAlbum))\n        } catch (e) {\n            console.log(e.message)\n        }\n    }\n}\n\nconst fetchAlbums = data => {\n    return {\n        type: FETCH_ALBUM,\n        payload: data\n    }\n}\n\nconst addAlbumInState = album => {\n    return {\n        type: ADD_ALBUM,\n        payload: album\n    }\n}\n\nexport const setAlbumById = albumId => {\n    return dispatch => {\n        try {\n            dispatch( setAlbumByIdInState(albumId) )\n        } catch (e) {\n            console.log(e.message)\n        }\n    }\n}\n\nconst setAlbumByIdInState = albumId => {\n    return {\n        type: SET_ALBUM_BY_ID,\n        payload: albumId\n    }\n}\n\n//Server Side\n\nconst getObj = () => {\n    return {\n        list: [...albumsInitial]\n    }\n}\n\nconst addAlbumInServer = album => {\n    const newAlbum = {\n        ...album,\n        id: Date.now()\n    }\n    albumsInitial.push(newAlbum)\n    setAlbumsToStorage(albumsInitial)\n    return newAlbum\n}"]},"metadata":{},"sourceType":"module"}