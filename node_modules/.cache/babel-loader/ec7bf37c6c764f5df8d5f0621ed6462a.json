{"ast":null,"code":"var _jsxFileName = \"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport albumsInitial, { setAlbumsToStorage } from '../data/albums';\nimport photosInitial, { setPhotosToStorage } from '../data/photos';\nimport postsInitial, { setPostsToStorage } from \"../data/posts\";\nimport Navigation from \"./Navigation\";\nimport Pages from \"../layouts/Pages\";\nimport { getPosts } from \"../store/actions/posts\";\nimport { getAlbums } from \"../store/actions/albums\"; // export const GlobalContext = React.createContext(null)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = ({\n  initPosts,\n  initAlbums\n}) => {\n  _s();\n\n  useEffect(() => {\n    initPosts();\n    initAlbums();\n  }, []); // const [albums, setAlbums] = useState(albumsInitial)\n  // const addNewAlbum = formData => {\n  //     const newAlbums = [...albums, {...formData, id: Date.now()}]\n  //     setAlbums(newAlbums)\n  //     setAlbumsToStorage(newAlbums)\n  // }\n  // const getAlbumById = id => {\n  //     const idx = albums.findIndex(album => album.id === id)\n  //     if (idx === -1) {\n  //         return null\n  //     }\n  //     return albums[idx]\n  // }\n\n  const [photos, setPhotos] = useState(photosInitial);\n\n  const addNewPhoto = formData => {\n    const newPhotos = [...photos, { ...formData,\n      id: Date.now(),\n      like: 0,\n      dislike: 0\n    }];\n    setPhotos(newPhotos);\n    setPhotosToStorage(newPhotos);\n  };\n\n  const photoAction = (id, action) => {\n    const newPhotos = [...photos];\n    let idx = newPhotos.findIndex(p => p.id === id);\n    if (idx === -1) return null;\n    newPhotos[idx][action]++;\n    setPhotos(newPhotos);\n    setPhotosToStorage(newPhotos);\n  }; // const [posts, setPosts] = useState(postsInitial);\n  //\n  // const addNewPost = (formData) => {\n  //     const newPosts = [...posts, {...formData, id: Date.now(), datetime: Date.now()}]\n  //     setPosts(newPosts)\n  //     setPostsToStorage(newPosts)\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      // albums,\n      // addNewAlbum,\n      // getAlbumById,\n      photos,\n      addNewPhoto,\n      photoAction // posts,\n      // addNewPost\n\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pages, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"q9ln/r9RYc8iwRNXOTxwrOqLH3Y=\");\n\n_c = App;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initPosts: () => dispatch(getPosts()),\n    initAlbums: () => dispatch(getAlbums())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/App.js"],"names":["React","useState","useEffect","connect","albumsInitial","setAlbumsToStorage","photosInitial","setPhotosToStorage","postsInitial","setPostsToStorage","Navigation","Pages","getPosts","getAlbums","App","initPosts","initAlbums","photos","setPhotos","addNewPhoto","formData","newPhotos","id","Date","now","like","dislike","photoAction","action","idx","findIndex","p","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,aAAP,IAAuBC,kBAAvB,QAAgD,gBAAhD;AACA,OAAOC,aAAP,IAAuBC,kBAAvB,QAAgD,gBAAhD;AACA,OAAOC,YAAP,IAAsBC,iBAAtB,QAA8C,eAA9C;AAGA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,SAAQC,SAAR,QAAwB,yBAAxB,C,CAEA;;;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAD,KAA6B;AAAA;;AAErCd,EAAAA,SAAS,CAAC,MAAI;AACVa,IAAAA,SAAS;AACTC,IAAAA,UAAU;AACb,GAHQ,EAGN,EAHM,CAAT,CAFqC,CAOrC;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAACK,aAAD,CAApC;;AAEA,QAAMa,WAAW,GAAGC,QAAQ,IAAI;AAC5B,UAAMC,SAAS,GAAG,CAAC,GAAGJ,MAAJ,EAAY,EAAC,GAAGG,QAAJ;AAAcE,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAAlB;AAA8BC,MAAAA,IAAI,EAAE,CAApC;AAAuCC,MAAAA,OAAO,EAAE;AAAhD,KAAZ,CAAlB;AACAR,IAAAA,SAAS,CAACG,SAAD,CAAT;AACAd,IAAAA,kBAAkB,CAACc,SAAD,CAAlB;AACH,GAJD;;AAMA,QAAMM,WAAW,GAAG,CAACL,EAAD,EAAKM,MAAL,KAAgB;AAChC,UAAMP,SAAS,GAAG,CAAC,GAAGJ,MAAJ,CAAlB;AACA,QAAIY,GAAG,GAAGR,SAAS,CAACS,SAAV,CAAqBC,CAAC,IAAEA,CAAC,CAACT,EAAF,KAASA,EAAjC,CAAV;AACA,QAAIO,GAAG,KAAI,CAAC,CAAZ,EAAe,OAAO,IAAP;AACfR,IAAAA,SAAS,CAACQ,GAAD,CAAT,CAAeD,MAAf;AACAV,IAAAA,SAAS,CAACG,SAAD,CAAT;AACAd,IAAAA,kBAAkB,CAACc,SAAD,CAAlB;AACH,GAPD,CAhCqC,CAyCrC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,sBACI,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC3B;AACA;AACA;AACAJ,MAAAA,MAJ2B;AAK3BE,MAAAA,WAL2B;AAM3BQ,MAAAA,WAN2B,CAO3B;AACA;;AAR2B,KAA/B;AAAA,4BAUI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAjED;;GAAMb,G;;KAAAA,G;;AAmEN,MAAMkB,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHlB,IAAAA,SAAS,EAAE,MAAMkB,QAAQ,CAACrB,QAAQ,EAAT,CADtB;AAEHI,IAAAA,UAAU,EAAE,MAAMiB,QAAQ,CAACpB,SAAS,EAAV;AAFvB,GAAP;AAIH,CALD;;AAOA,eAAeV,OAAO,CAAC,IAAD,EAAO6B,kBAAP,CAAP,CAAkClB,GAAlC,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nimport {connect} from \"react-redux\"\n\nimport albumsInitial, {setAlbumsToStorage} from '../data/albums'\nimport photosInitial, {setPhotosToStorage} from '../data/photos'\nimport postsInitial, {setPostsToStorage} from \"../data/posts\"\n\n\nimport Navigation from \"./Navigation\";\nimport Pages from \"../layouts/Pages\";\nimport {getPosts} from \"../store/actions/posts\";\nimport {getAlbums} from \"../store/actions/albums\";\n\n// export const GlobalContext = React.createContext(null)\n\nconst App = ({initPosts, initAlbums}) => {\n\n    useEffect(()=>{\n        initPosts()\n        initAlbums()\n    }, [])\n\n    // const [albums, setAlbums] = useState(albumsInitial)\n\n    // const addNewAlbum = formData => {\n    //     const newAlbums = [...albums, {...formData, id: Date.now()}]\n    //     setAlbums(newAlbums)\n    //     setAlbumsToStorage(newAlbums)\n\n    // }\n\n    // const getAlbumById = id => {\n    //     const idx = albums.findIndex(album => album.id === id)\n    //     if (idx === -1) {\n    //         return null\n    //     }\n    //     return albums[idx]\n    // }\n\n    const [photos, setPhotos] = useState(photosInitial)\n\n    const addNewPhoto = formData => {\n        const newPhotos = [...photos, {...formData, id: Date.now(), like: 0, dislike: 0}]\n        setPhotos(newPhotos)\n        setPhotosToStorage(newPhotos)\n    }\n\n    const photoAction = (id, action) => {\n        const newPhotos = [...photos]\n        let idx = newPhotos.findIndex( p=>p.id === id)\n        if (idx ===-1) return null\n        newPhotos[idx][action]++\n        setPhotos(newPhotos)\n        setPhotosToStorage(newPhotos)\n    }\n\n    // const [posts, setPosts] = useState(postsInitial);\n    //\n    // const addNewPost = (formData) => {\n    //     const newPosts = [...posts, {...formData, id: Date.now(), datetime: Date.now()}]\n    //     setPosts(newPosts)\n    //     setPostsToStorage(newPosts)\n    // };\n\n\n    return (\n        <GlobalContext.Provider value={{\n            // albums,\n            // addNewAlbum,\n            // getAlbumById,\n            photos,\n            addNewPhoto,\n            photoAction,\n            // posts,\n            // addNewPost\n        }}>\n            <Navigation/>\n            <Pages/>\n        </GlobalContext.Provider>\n    )\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        initPosts: () => dispatch(getPosts()),\n        initAlbums: () => dispatch(getAlbums())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(App)"]},"metadata":{},"sourceType":"module"}