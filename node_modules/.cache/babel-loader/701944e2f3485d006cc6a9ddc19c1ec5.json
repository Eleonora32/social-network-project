{"ast":null,"code":"var _jsxFileName = \"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Albums/Album.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\nimport { setPersonById } from \"../../store/actions/persons\";\nimport { setAlbumById } from \"../../store/actions/albums\"; // import PhotoCard from \"../Photos/PhotoCard\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Album = (album, person, getPersonById, getAlbumById) => {\n  _s();\n\n  // const {photos, getPersonById, getAlbumById} = useContext(GlobalContext)\n  const {\n    id\n  } = useParams(); // const [album, setAlbum] = useState(getAlbumById(+id))\n  // const [person, setPerson] = useState(null)\n  // const [albumPhotos, setAlbumPhotos] = useState(photos.filter(p => p.albumId === +id))\n\n  useEffect(() => {\n    getAlbumById(id);\n  }, []);\n  useEffect(() => {\n    if (!album) {\n      return;\n    }\n\n    getPersonById(album.personId);\n  }, [album]);\n\n  const renderAlbum = () => {\n    if (!album || !person) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: album.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"by \", person.lName, \" \", person.fName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  };\n\n  return renderAlbum();\n};\n\n_s(Album, \"2udsMRALgEknrjnOqVbZySR2F2Y=\", false, function () {\n  return [useParams];\n});\n\n_c = Album;\n\nconst mapStateToProps = state => {\n  return {\n    albums: state.albums.list,\n    persons: state.persons.personById\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPersonById: id => dispatch(setPersonById(id)),\n    getAlbumById: id => dispatch(setAlbumById(id)) // addLocalPost: post => dispatch(addPost(post))\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Album);\n\nvar _c;\n\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"sources":["/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Albums/Album.js"],"names":["React","useEffect","connect","useParams","setPersonById","setAlbumById","Album","album","person","getPersonById","getAlbumById","id","personId","renderAlbum","title","lName","fName","mapStateToProps","state","albums","list","persons","personById","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,aAAR,QAA4B,6BAA5B;AACA,SAASC,YAAT,QAA6B,4BAA7B,C,CACA;;;;AAEA,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,aAAhB,EAA+BC,YAA/B,KAAgD;AAAA;;AAC1D;AACA,QAAM;AAACC,IAAAA;AAAD,MAAOR,SAAS,EAAtB,CAF0D,CAG1D;AACA;AACA;;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,YAAY,CAACC,EAAD,CAAZ;AAGH,GAJQ,EAIN,EAJM,CAAT;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,CAACM,KAAJ,EAAW;AACP;AACH;;AACDE,IAAAA,aAAa,CAACF,KAAK,CAACK,QAAP,CAAb;AACD,GALQ,EAKP,CAACL,KAAD,CALO,CAAT;;AAUA,QAAMM,WAAW,GAAG,MAAM;AACtB,QAAI,CAACN,KAAD,IAAU,CAACC,MAAf,EAAuB;AACnB,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACH;;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA,kBAAKD,KAAK,CAACO;AAAX;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,0BAAQN,MAAM,CAACO,KAAf,OAAuBP,MAAM,CAACQ,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAbD;;AAeA,SAAOH,WAAW,EAAlB;AACH,CAtCD;;GAAMP,K;UAEWH,S;;;KAFXG,K;;AAwCN,MAAMW,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACPC,IAAAA,MAAM,EAAED,KAAK,CAACC,MAAN,CAAaC,IADd;AAEPC,IAAAA,OAAO,EAAEH,KAAK,CAACG,OAAN,CAAcC;AAFhB,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHf,IAAAA,aAAa,EAAGE,EAAD,IAAQa,QAAQ,CAACpB,aAAa,CAACO,EAAD,CAAd,CAD5B;AAEHD,IAAAA,YAAY,EAAGC,EAAD,IAAQa,QAAQ,CAACnB,YAAY,CAACM,EAAD,CAAb,CAF3B,CAGH;;AAHG,GAAP;AAIF,CALF;;AAOA,eAAeT,OAAO,CAACe,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CjB,KAA7C,CAAf","sourcesContent":["import React, {useEffect,} from \"react\";\nimport {connect} from \"react-redux\";\nimport {useParams} from 'react-router-dom';\nimport {setPersonById} from \"../../store/actions/persons\";\nimport { setAlbumById } from \"../../store/actions/albums\";\n// import PhotoCard from \"../Photos/PhotoCard\";\n\nconst Album = (album, person, getPersonById, getAlbumById) => {\n    // const {photos, getPersonById, getAlbumById} = useContext(GlobalContext)\n    const {id} = useParams()\n    // const [album, setAlbum] = useState(getAlbumById(+id))\n    // const [person, setPerson] = useState(null)\n    // const [albumPhotos, setAlbumPhotos] = useState(photos.filter(p => p.albumId === +id))\n\n    useEffect(() => {\n        getAlbumById(id);\n        \n       \n    }, []);\n    useEffect(() => {\n      if(!album) {\n          return\n      }\n      getPersonById(album.personId)\n    },[album])\n    \n\n\n\n    const renderAlbum = () => {\n        if (!album || !person) {\n            return (<div>Loading ...</div>)\n        }\n        return (\n            <div className=\"container\">\n                <h1>{album.title}</h1>\n                <h2>by {person.lName} {person.fName}</h2>\n                <div className=\"row\">\n                    {/* {albumPhotos.map(photo => <PhotoCard key={photo.id} photo={photo}/>)} */}\n                </div>\n            </div>\n        )\n    }\n\n    return renderAlbum()\n}\n\nconst mapStateToProps = state => {\n    return {\n    albums: state.albums.list,\n    persons: state.persons.personById\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getPersonById: (id) => dispatch(setPersonById(id)),\n        getAlbumById: (id) => dispatch(setAlbumById(id))\n        // addLocalPost: post => dispatch(addPost(post))\n}}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Album)"]},"metadata":{},"sourceType":"module"}