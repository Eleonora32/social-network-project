{"ast":null,"code":"var _jsxFileName = \"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Persons/SelectActivePerson.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeActivePersonId, getPersons } from \"../../store/actions/persons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectActivePerson = ({\n  persons,\n  activePerson,\n  getPersonsObject,\n  changeActivePerson\n}) => {\n  _s();\n\n  useEffect(() => {\n    getPersonsObject();\n  }, []);\n\n  const changeSelectValue = event => {\n    changeActivePerson(+event.target.value);\n  };\n\n  return persons.length ? /*#__PURE__*/_jsxDEV(\"select\", {\n    onChange: changeSelectValue,\n    defaultValue: activePerson || null,\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"-1\",\n      children: \"Choose a user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), persons.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: p.id,\n      children: [p.fName, \" \", p.lName]\n    }, p.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 32\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this) : null;\n};\n\n_s(SelectActivePerson, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = SelectActivePerson;\n\nconst mapStateToProps = state => {\n  return {\n    persons: state.persons.list,\n    activePerson: state.persons.activePerson\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPersonsObject: () => dispatch(getPersons()),\n    changeActivePerson: newId => dispatch(changeActivePersonId(newId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectActivePerson);\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectActivePerson\");","map":{"version":3,"sources":["/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Persons/SelectActivePerson.js"],"names":["React","useEffect","connect","changeActivePersonId","getPersons","SelectActivePerson","persons","activePerson","getPersonsObject","changeActivePerson","changeSelectValue","event","target","value","length","map","p","id","fName","lName","mapStateToProps","state","list","mapDispatchToProps","dispatch","newId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,oBAAR,EAA8BC,UAA9B,QAA+C,6BAA/C;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,YAAV;AAAwBC,EAAAA,gBAAxB;AAA0CC,EAAAA;AAA1C,CAAD,KAAmE;AAAA;;AAE1FR,EAAAA,SAAS,CAAC,MAAM;AAEZO,IAAAA,gBAAgB;AACnB,GAHQ,EAGN,EAHM,CAAT;;AAMA,QAAME,iBAAiB,GAAGC,KAAK,IAAI;AAC/BF,IAAAA,kBAAkB,CAAC,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAf,CAAlB;AACH,GAFD;;AAIA,SAAOP,OAAO,CAACQ,MAAR,gBACH;AAAQ,IAAA,QAAQ,EAAEJ,iBAAlB;AAAqC,IAAA,YAAY,EAAEH,YAAY,IAAI,IAAnE;AAAA,4BACI;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKD,OAAO,CAACS,GAAR,CAAYC,CAAC,iBAAK;AAAmB,MAAA,KAAK,EAAEA,CAAC,CAACC,EAA5B;AAAA,iBAAiCD,CAAC,CAACE,KAAnC,OAA2CF,CAAC,CAACG,KAA7C;AAAA,OAAaH,CAAC,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,YAAlB,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADG,GAKH,IALJ;AAMH,CAlBD;;GAAMZ,kB;;KAAAA,kB;;AAoBN,MAAMe,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHf,IAAAA,OAAO,EAAEe,KAAK,CAACf,OAAN,CAAcgB,IADpB;AAEHf,IAAAA,YAAY,EAAEc,KAAK,CAACf,OAAN,CAAcC;AAFzB,GAAP;AAIH,CALD;;AAOA,MAAMgB,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHhB,IAAAA,gBAAgB,EAAE,MAAMgB,QAAQ,CAACpB,UAAU,EAAX,CAD7B;AAEHK,IAAAA,kBAAkB,EAAEgB,KAAK,IAAID,QAAQ,CAACrB,oBAAoB,CAACsB,KAAD,CAArB;AAFlC,GAAP;AAIH,CALD;;AAOA,eAAevB,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ClB,kBAA7C,CAAf","sourcesContent":["import React, {useEffect} from \"react\"\nimport {connect} from \"react-redux\"\nimport {changeActivePersonId, getPersons} from \"../../store/actions/persons\";\n\nconst SelectActivePerson = ({persons, activePerson, getPersonsObject, changeActivePerson}) => {\n\n    useEffect(() => {\n    \n        getPersonsObject()\n    }, []);\n\n\n    const changeSelectValue = event => {\n        changeActivePerson(+event.target.value)\n    }\n\n    return persons.length ? (\n        <select onChange={changeSelectValue} defaultValue={activePerson || null}>\n            <option value='-1'>Choose a user</option>\n            {persons.map(p => (<option key={p.id} value={p.id}>{p.fName} {p.lName}</option>))}\n        </select>\n    ) : null\n}\n\nconst mapStateToProps = state => {\n    return {\n        persons: state.persons.list,\n        activePerson: state.persons.activePerson\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getPersonsObject: () => dispatch(getPersons()),\n        changeActivePerson: newId => dispatch(changeActivePersonId(newId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectActivePerson)"]},"metadata":{},"sourceType":"module"}