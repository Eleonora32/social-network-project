{"ast":null,"code":"var _jsxFileName = \"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Albums/Album.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { GlobalContext } from \"../App\";\nimport { setPersonById } from \"../../store/actions/persons\";\nimport { useParams } from 'react-router-dom';\nimport PhotoCard from \"../Photos/PhotoCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Album = () => {\n  _s();\n\n  // const {photos, getPersonById, getAlbumById} = useContext(GlobalContext)\n  // const {id} = useParams()\n  // const [album, setAlbum] = useState(getAlbumById(+id))\n  // const [person, setPerson] = useState(null)\n  const [albumPhotos, setAlbumPhotos] = useState(photos.filter(p => p.albumId === +id));\n  useEffect(() => {\n    if (album.id) {\n      getPersonById(album.personId);\n    }\n  }, []);\n\n  const renderAlbum = () => {\n    if (!album || !person) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: album.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"by \", person.lName, \" \", person.fName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: albumPhotos.map(photo => /*#__PURE__*/_jsxDEV(PhotoCard, {\n          photo: photo\n        }, photo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 47\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  };\n\n  return renderAlbum();\n};\n\n_s(Album, \"fok2EIlkMnRbqbVp4mXbEIQDH9s=\");\n\n_c = Album;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPersonById: id => dispatch(setPersonById(id)) // addLocalPost: post => dispatch(addPost(post))\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Album);\n\nvar _c;\n\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"sources":["/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Albums/Album.js"],"names":["React","useContext","useEffect","useState","GlobalContext","setPersonById","useParams","PhotoCard","Album","albumPhotos","setAlbumPhotos","photos","filter","p","albumId","id","album","getPersonById","personId","renderAlbum","person","title","lName","fName","map","photo","mapDispatchToProps","dispatch","connect","mapStateToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAAQC,aAAR,QAA4B,QAA5B;AACA,SAAQC,aAAR,QAA4B,6BAA5B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB;AACA;AACA;AACA;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACQ,MAAM,CAACC,MAAP,CAAcC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAc,CAACC,EAAlC,CAAD,CAA9C;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,KAAK,CAACD,EAAV,EAAc;AACVE,MAAAA,aAAa,CAACD,KAAK,CAACE,QAAP,CAAb;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAI,CAACH,KAAD,IAAU,CAACI,MAAf,EAAuB;AACnB,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACH;;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA,kBAAKJ,KAAK,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,0BAAQD,MAAM,CAACE,KAAf,OAAuBF,MAAM,CAACG,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACKd,WAAW,CAACe,GAAZ,CAAgBC,KAAK,iBAAI,QAAC,SAAD;AAA0B,UAAA,KAAK,EAAEA;AAAjC,WAAgBA,KAAK,CAACV,EAAtB;AAAA;AAAA;AAAA;AAAA,gBAAzB;AADL;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAbD;;AAeA,SAAOI,WAAW,EAAlB;AACH,CA7BD;;GAAMX,K;;KAAAA,K;;AA+BN,MAAMkB,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHV,IAAAA,aAAa,EAAGF,EAAD,IAAQY,QAAQ,CAACtB,aAAa,CAACU,EAAD,CAAd,CAD5B,CAEH;;AAFG,GAAP;AAGF,CAJF;;AAMA,eAAea,OAAO,CAACC,eAAD,EAAkBH,kBAAlB,CAAP,CAA6ClB,KAA7C,CAAf","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\"\nimport {GlobalContext} from \"../App\"\nimport {setPersonById} from \"../../store/actions/persons\";\nimport {useParams} from 'react-router-dom'\nimport PhotoCard from \"../Photos/PhotoCard\";\n\nconst Album = () => {\n    // const {photos, getPersonById, getAlbumById} = useContext(GlobalContext)\n    // const {id} = useParams()\n    // const [album, setAlbum] = useState(getAlbumById(+id))\n    // const [person, setPerson] = useState(null)\n    const [albumPhotos, setAlbumPhotos] = useState(photos.filter(p => p.albumId === +id))\n\n    useEffect(() => {\n        if (album.id) {\n            getPersonById(album.personId)\n        }\n    }, [])\n\n    const renderAlbum = () => {\n        if (!album || !person) {\n            return (<div>Loading ...</div>)\n        }\n        return (\n            <div className=\"container\">\n                <h1>{album.title}</h1>\n                <h2>by {person.lName} {person.fName}</h2>\n                <div className=\"row\">\n                    {albumPhotos.map(photo => <PhotoCard key={photo.id} photo={photo}/>)}\n                </div>\n            </div>\n        )\n    }\n\n    return renderAlbum()\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getPersonById: (id) => dispatch(setPersonById(id)),\n        // addLocalPost: post => dispatch(addPost(post))\n}}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Album)"]},"metadata":{},"sourceType":"module"}