{"ast":null,"code":"var _jsxFileName = \"/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Albums/Album.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\"; // import {GlobalContext} from \"../App\"\n\nimport { connect } from \"react-redux\";\nimport { setPersonById } from \"../../store/actions/persons\";\nimport { useParams } from 'react-router-dom';\nimport { getAlbums } from \"../../store/actions/albums\"; // import PhotoCard from \"../Photos/PhotoCard\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Album = (albums, persons, getPersonById) => {\n  _s();\n\n  // const {photos, getPersonById, getAlbumById} = useContext(GlobalContext)\n  const {\n    id\n  } = useParams(); // const [album, setAlbum] = useState(getAlbumById(+id))\n  // const [person, setPerson] = useState(null)\n  // const [albumPhotos, setAlbumPhotos] = useState(photos.filter(p => p.albumId === +id))\n\n  useEffect(() => {\n    getPersonById(albums.personId);\n    getAlbumById(id);\n  }, []);\n\n  const renderAlbum = () => {\n    if (!albums || !persons) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: albums.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"by \", persons.lName, \" \", persons.fName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  };\n\n  return renderAlbum();\n};\n\n_s(Album, \"WTkzVJt056/9vEFrj9nX40yNcDw=\", false, function () {\n  return [useParams];\n});\n\n_c = Album;\n\nconst mapStateToProps = state => {\n  return {\n    albums: state.albums.list,\n    persons: state.persons.personById\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getPersonById: id => dispatch(setPersonById(id)) // addLocalPost: post => dispatch(addPost(post))\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Album);\n\nvar _c;\n\n$RefreshReg$(_c, \"Album\");","map":{"version":3,"sources":["/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/components/Albums/Album.js"],"names":["React","useEffect","connect","setPersonById","useParams","getAlbums","Album","albums","persons","getPersonById","id","personId","getAlbumById","renderAlbum","title","lName","fName","mapStateToProps","state","list","personById","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,6BAA5B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAASC,SAAT,QAA0B,4BAA1B,C,CACA;;;;AAEA,MAAMC,KAAK,GAAG,CAACC,MAAD,EAASC,OAAT,EAAkBC,aAAlB,KAAoC;AAAA;;AAC9C;AACA,QAAM;AAACC,IAAAA;AAAD,MAAON,SAAS,EAAtB,CAF8C,CAG9C;AACA;AACA;;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,aAAa,CAACF,MAAM,CAACI,QAAR,CAAb;AACAC,IAAAA,YAAY,CAACF,EAAD,CAAZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAOA,QAAMG,WAAW,GAAG,MAAM;AACtB,QAAI,CAACN,MAAD,IAAW,CAACC,OAAhB,EAAyB;AACrB,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACH;;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA,kBAAKD,MAAM,CAACO;AAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,0BAAQN,OAAO,CAACO,KAAhB,OAAwBP,OAAO,CAACQ,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAbD;;AAeA,SAAOH,WAAW,EAAlB;AACH,CA9BD;;GAAMP,K;UAEWF,S;;;KAFXE,K;;AAgCN,MAAMW,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACPX,IAAAA,MAAM,EAAEW,KAAK,CAACX,MAAN,CAAaY,IADd;AAEPX,IAAAA,OAAO,EAAEU,KAAK,CAACV,OAAN,CAAcY;AAFhB,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHb,IAAAA,aAAa,EAAGC,EAAD,IAAQY,QAAQ,CAACnB,aAAa,CAACO,EAAD,CAAd,CAD5B,CAEH;;AAFG,GAAP;AAGF,CAJF;;AAMA,eAAeR,OAAO,CAACe,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cf,KAA7C,CAAf","sourcesContent":["import React, {useEffect,} from \"react\"\n// import {GlobalContext} from \"../App\"\nimport {connect} from \"react-redux\"\nimport {setPersonById} from \"../../store/actions/persons\";\nimport {useParams} from 'react-router-dom'\nimport { getAlbums } from \"../../store/actions/albums\";\n// import PhotoCard from \"../Photos/PhotoCard\";\n\nconst Album = (albums, persons, getPersonById) => {\n    // const {photos, getPersonById, getAlbumById} = useContext(GlobalContext)\n    const {id} = useParams()\n    // const [album, setAlbum] = useState(getAlbumById(+id))\n    // const [person, setPerson] = useState(null)\n    // const [albumPhotos, setAlbumPhotos] = useState(photos.filter(p => p.albumId === +id))\n\n    useEffect(() => {\n        getPersonById(albums.personId)\n        getAlbumById(id)\n    }, []);\n\n\n\n    const renderAlbum = () => {\n        if (!albums || !persons) {\n            return (<div>Loading ...</div>)\n        }\n        return (\n            <div className=\"container\">\n                <h1>{albums.title}</h1>\n                <h2>by {persons.lName} {persons.fName}</h2>\n                <div className=\"row\">\n                    {/* {albumPhotos.map(photo => <PhotoCard key={photo.id} photo={photo}/>)} */}\n                </div>\n            </div>\n        )\n    }\n\n    return renderAlbum()\n}\n\nconst mapStateToProps = state => {\n    return {\n    albums: state.albums.list,\n    persons: state.persons.personById\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getPersonById: (id) => dispatch(setPersonById(id))\n        // addLocalPost: post => dispatch(addPost(post))\n}}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Album)"]},"metadata":{},"sourceType":"module"}