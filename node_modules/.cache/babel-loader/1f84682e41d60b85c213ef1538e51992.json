{"ast":null,"code":"import { ADD_ALBUM, CHANGE_ADD_ALBUM, FETCH_ALBUM } from \"../typesList\";\nlet idx;\n\nlet _arr;\n\nexport const AlbumsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ADD_ALBUM:\n      return { ...state,\n        list: [...state.list, action.payload]\n      };\n\n    case FETCH_ALBUM:\n      return { ...state,\n        ...action.payload\n      };\n\n    case CHANGE_ADD_ALBUM:\n      return { ...state,\n        addAlbumMode: !state.addAlbumMode\n      };\n\n    case SET_ALBUM_BY_ID:\n      idx = state.list.findIndex(a => a.id === action.payload);\n      if (idx === -1) return { ...state,\n        albumById: {}\n      };\n      return { ...state,\n        albumById: state.list[idx]\n      };\n\n    default:\n      return state;\n  }\n};\n_c = AlbumsReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumsReducer\");","map":{"version":3,"sources":["/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/reducers/AlbumsReducer.js"],"names":["ADD_ALBUM","CHANGE_ADD_ALBUM","FETCH_ALBUM","idx","_arr","AlbumsReducer","state","action","type","list","payload","addAlbumMode","SET_ALBUM_BY_ID","findIndex","a","id","albumById"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,gBAAnB,EAAqCC,WAArC,QAAuD,cAAvD;AAGA,IAAIC,GAAJ;;AACA,IAAIC,IAAJ;;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAC,EAAP,EAAWC,MAAX,KAAsB;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,SAAL;AACI,aAAO,EACH,GAAGM,KADA;AACOG,QAAAA,IAAI,EAAE,CAAC,GAAGH,KAAK,CAACG,IAAV,EAAgBF,MAAM,CAACG,OAAvB;AADb,OAAP;;AAGJ,SAAKR,WAAL;AACI,aAAO,EAAC,GAAGI,KAAJ;AAAW,WAAGC,MAAM,CAACG;AAArB,OAAP;;AACJ,SAAKT,gBAAL;AACI,aAAO,EAAC,GAAGK,KAAJ;AAAYK,QAAAA,YAAY,EAAE,CAACL,KAAK,CAACK;AAAjC,OAAP;;AACJ,SAAKC,eAAL;AACKT,MAAAA,GAAG,GAAGG,KAAK,CAACG,IAAN,CAAWI,SAAX,CAAqBC,CAAC,IAAEA,CAAC,CAACC,EAAF,KAAOR,MAAM,CAACG,OAAtC,CAAN;AACG,UAAIP,GAAG,KAAG,CAAC,CAAX,EAAc,OAAO,EAAC,GAAGG,KAAJ;AAAYU,QAAAA,SAAS,EAAE;AAAvB,OAAP;AACd,aAAO,EAAC,GAAGV,KAAJ;AAAYU,QAAAA,SAAS,EAAEV,KAAK,CAACG,IAAN,CAAWN,GAAX;AAAvB,OAAP;;AAER;AACI,aAAOG,KAAP;AAfR;AAiBH,CAlBM;KAAMD,a","sourcesContent":["import {ADD_ALBUM, CHANGE_ADD_ALBUM, FETCH_ALBUM} from \"../typesList\";\n\n\nlet idx\nlet _arr\n\nexport const AlbumsReducer = (state={}, action) => {\n    switch (action.type) {\n        case ADD_ALBUM:\n            return {\n                ...state, list: [...state.list, action.payload]\n            }\n        case FETCH_ALBUM:\n            return {...state, ...action.payload}\n        case CHANGE_ADD_ALBUM:\n            return {...state,  addAlbumMode: !state.addAlbumMode}\n        case SET_ALBUM_BY_ID:\n             idx = state.list.findIndex(a=>a.id===action.payload)\n                if (idx===-1) return {...state,  albumById: {}}\n                return {...state,  albumById: state.list[idx]}\n                \n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}