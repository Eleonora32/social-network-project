{"ast":null,"code":"import { ADD_NEW_PERSON, CHANGE_ACTIVE_PERSON, CHANGE_EDIT_MODE, DELETE_PERSON, EDIT_PERSON, FETCH_PERSONS, SET_PERSON_BY_ID } from \"../typesList\";\nlet idx;\n\nlet _arr;\n\nexport const PersonsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_PERSONS:\n      return { ...state,\n        ...action.payload\n      };\n\n    case ADD_NEW_PERSON:\n      return { ...state,\n        list: [...state.list, action.payload]\n      };\n\n    case CHANGE_ACTIVE_PERSON:\n      return { ...state,\n        activePerson: action.payload\n      };\n\n    case DELETE_PERSON:\n      idx = state.list.findIndex(p => p.id === action.payload);\n      if (idx === -1) return state;\n      _arr = [...state.list];\n\n      _arr.splice(idx, 1);\n\n      return { ...state,\n        list: _arr\n      };\n\n    case EDIT_PERSON:\n      idx = state.list.findIndex(p => p.id === action.payload.id);\n      if (idx === -1) return state;\n      _arr = [...state.list];\n\n      _arr.splice(idx, 1, action.payload);\n\n      return { ...state,\n        list: _arr\n      };\n\n    case SET_PERSON_BY_ID:\n      idx = state.list.findIndex(p => p.id === action.payload);\n      if (idx === -1) return { ...state,\n        personById: {}\n      };\n      return { ...state,\n        personById: state.list[idx]\n      };\n\n    case CHANGE_EDIT_MODE:\n      return { ...state,\n        editMode: !state.editMode\n      };\n\n    default:\n      return state;\n  }\n};\n_c = PersonsReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonsReducer\");","map":{"version":3,"sources":["/Users/olegdubovoj/Documents/TEL-RAN/social-network-project/src/store/reducers/PersonReducer.js"],"names":["ADD_NEW_PERSON","CHANGE_ACTIVE_PERSON","CHANGE_EDIT_MODE","DELETE_PERSON","EDIT_PERSON","FETCH_PERSONS","SET_PERSON_BY_ID","idx","_arr","PersonsReducer","state","action","type","payload","list","activePerson","findIndex","p","id","splice","personById","editMode"],"mappings":"AAAA,SACIA,cADJ,EAEIC,oBAFJ,EAE0BC,gBAF1B,EAGIC,aAHJ,EAIIC,WAJJ,EAKIC,aALJ,EAMIC,gBANJ,QAOO,cAPP;AAUA,IAAIC,GAAJ;;AACA,IAAIC,IAAJ;;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,aAAL;AACI,aAAO,EAAC,GAAGK,KAAJ;AAAW,WAAGC,MAAM,CAACE;AAArB,OAAP;;AAEJ,SAAKb,cAAL;AAEI,aAAO,EACH,GAAGU,KADA;AACOI,QAAAA,IAAI,EAAE,CAAC,GAAGJ,KAAK,CAACI,IAAV,EAAgBH,MAAM,CAACE,OAAvB;AADb,OAAP;;AAIJ,SAAKZ,oBAAL;AACI,aAAO,EAAC,GAAGS,KAAJ;AAAYK,QAAAA,YAAY,EAAEJ,MAAM,CAACE;AAAjC,OAAP;;AAEJ,SAAKV,aAAL;AACII,MAAAA,GAAG,GAAGG,KAAK,CAACI,IAAN,CAAWE,SAAX,CAAqBC,CAAC,IAAEA,CAAC,CAACC,EAAF,KAAOP,MAAM,CAACE,OAAtC,CAAN;AACA,UAAIN,GAAG,KAAK,CAAC,CAAb,EAAgB,OAAOG,KAAP;AAChBF,MAAAA,IAAI,GAAG,CAAC,GAAGE,KAAK,CAACI,IAAV,CAAP;;AACAN,MAAAA,IAAI,CAACW,MAAL,CAAYZ,GAAZ,EAAgB,CAAhB;;AACA,aAAO,EAAE,GAAGG,KAAL;AAAaI,QAAAA,IAAI,EAAEN;AAAnB,OAAP;;AAEJ,SAAKJ,WAAL;AAEIG,MAAAA,GAAG,GAAGG,KAAK,CAACI,IAAN,CAAWE,SAAX,CAAqBC,CAAC,IAAEA,CAAC,CAACC,EAAF,KAAOP,MAAM,CAACE,OAAP,CAAeK,EAA9C,CAAN;AACA,UAAIX,GAAG,KAAG,CAAC,CAAX,EAAc,OAAOG,KAAP;AACdF,MAAAA,IAAI,GAAG,CAAC,GAAGE,KAAK,CAACI,IAAV,CAAP;;AACAN,MAAAA,IAAI,CAACW,MAAL,CAAYZ,GAAZ,EAAiB,CAAjB,EAAoBI,MAAM,CAACE,OAA3B;;AACA,aAAO,EAAC,GAAGH,KAAJ;AAAWI,QAAAA,IAAI,EAAEN;AAAjB,OAAP;;AAEJ,SAAKF,gBAAL;AACIC,MAAAA,GAAG,GAAGG,KAAK,CAACI,IAAN,CAAWE,SAAX,CAAqBC,CAAC,IAAEA,CAAC,CAACC,EAAF,KAAOP,MAAM,CAACE,OAAtC,CAAN;AACA,UAAIN,GAAG,KAAG,CAAC,CAAX,EAAc,OAAO,EAAC,GAAGG,KAAJ;AAAYU,QAAAA,UAAU,EAAE;AAAxB,OAAP;AACd,aAAO,EAAC,GAAGV,KAAJ;AAAYU,QAAAA,UAAU,EAAEV,KAAK,CAACI,IAAN,CAAWP,GAAX;AAAxB,OAAP;;AAEJ,SAAKL,gBAAL;AACI,aAAO,EAAC,GAAGQ,KAAJ;AAAYW,QAAAA,QAAQ,EAAE,CAACX,KAAK,CAACW;AAA7B,OAAP;;AAGJ;AACI,aAAOX,KAAP;AAtCR;AAwCH,CAzCM;KAAMD,c","sourcesContent":["import {\n    ADD_NEW_PERSON,\n    CHANGE_ACTIVE_PERSON, CHANGE_EDIT_MODE,\n    DELETE_PERSON,\n    EDIT_PERSON,\n    FETCH_PERSONS,\n    SET_PERSON_BY_ID\n} from \"../typesList\";\n\n\nlet idx\nlet _arr\n\nexport const PersonsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_PERSONS:\n            return {...state, ...action.payload}\n\n        case ADD_NEW_PERSON:\n\n            return {\n                ...state, list: [...state.list, action.payload]\n            }\n\n        case CHANGE_ACTIVE_PERSON:\n            return {...state,  activePerson: action.payload}\n\n        case DELETE_PERSON:\n            idx = state.list.findIndex(p=>p.id===action.payload)\n            if (idx === -1) return state\n            _arr = [...state.list]\n            _arr.splice(idx,1)\n            return { ...state,  list: _arr }\n\n        case EDIT_PERSON:\n\n            idx = state.list.findIndex(p=>p.id===action.payload.id)\n            if (idx===-1) return state\n            _arr = [...state.list]\n            _arr.splice(idx, 1, action.payload)\n            return {...state, list: _arr}\n\n        case SET_PERSON_BY_ID:\n            idx = state.list.findIndex(p=>p.id===action.payload)\n            if (idx===-1) return {...state,  personById: {}}\n            return {...state,  personById: state.list[idx]}\n\n        case CHANGE_EDIT_MODE:\n            return {...state,  editMode: !state.editMode}\n\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}